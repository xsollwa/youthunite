<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>YouthUnite Intro</title>
<link href="https://fonts.googleapis.com/css2?family=Oswald:wght@700&display=swap" rel="stylesheet" />
<style>
  html, body {
    margin: 0; padding: 0; overflow: hidden;
    background: #fff;
    height: 100vh;
    font-family: 'Oswald', sans-serif;
    user-select: none;
  }
  canvas {
    display: block;
    background: transparent;
    position: fixed;
    top: 0; left: 0;
    width: 100vw;
    height: 100vh;
  }
  #logo {
    position: fixed;
    top: 50%;
    left: 50%;
    transform-origin: 50% 50%;
    opacity: 1;
    user-select: none;
    pointer-events: none;
    width: 280px;
    height: auto;
    transform: translate(-50%, -50%) scale(0);
    transition: none;
  }
</style>
</head>
<body>

<canvas id="canvas"></canvas>
<img id="logo" src="logo.png" alt="YouthUnite" />

<script>
  const canvas = document.getElementById('canvas');
  const ctx = canvas.getContext('2d');
  const logo = document.getElementById('logo');

  const KEYWORDS = [
    'CONNECT', 'EMPOWER', 'MOBILIZE', 'YOUTH', 'ORGANIZE',
    'EVENTS', 'VOLUNTEERING', 'CREATION', 'COURSES',
    'STORYTELLING', 'STUDENT', 'ORGANIZERS', 'PLATFORM',
    'NONPROFIT', 'PROJECTS', 'LEADERS', 'LEARNING',
    'SIGN UP', 'COMMUNITY', 'TOOLS', 'ENGAGE',
    'SUPPORT', 'COLLABORATE', 'IMPACT', 'ACTION',
    'EDUCATION', 'NETWORK', 'GROW', 'SKILLS', 'TEAMWORK'
  ];

  let words = [];
  let startTime = null;
  const spreadDuration = 3500;  
  const holdDuration = 1000;    
  const totalDuration = spreadDuration + holdDuration;


  const colors = ['#ff6600', '#002147', '#3399ff'];

  function resize() {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
  }
  window.addEventListener('resize', resize);
  resize();

  function initWords() {
    words = KEYWORDS.map(word => {
      return {
        text: word,
        x: canvas.width / 2,
        y: canvas.height / 2,
        dx: (Math.random() - 0.5) * 5,
        dy: (Math.random() - 0.5) * 5,
        opacity: 1,
        size: 42 + Math.random() * 14,
        color: colors[Math.floor(Math.random() * colors.length)],
      };
    });
  }

  function easeOut(t) {
    return 1 - Math.pow(1 - t, 3);
  }

  function animate(timestamp) {
    if (!startTime) startTime = timestamp;
    const elapsed = timestamp - startTime;

    ctx.clearRect(0, 0, canvas.width, canvas.height);


    ctx.fillStyle = '#fff';
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    if (elapsed < spreadDuration) {
      const t = elapsed / spreadDuration;
      const easeT = easeOut(t);

      words.forEach(word => {
        const moveX = word.dx * easeT * 350; 
        const moveY = word.dy * easeT * 350;
        const x = word.x + moveX;
        const y = word.y + moveY;

        ctx.font = `700 ${word.size}px Oswald, sans-serif`;
        ctx.textAlign = 'center';
        ctx.textBaseline = 'middle';

        ctx.fillStyle = word.color;
        ctx.shadowColor = 'rgba(0,0,0,0.3)'; 
        ctx.shadowBlur = 4;
        ctx.globalAlpha = 1 - easeT;

        ctx.fillText(word.text, x, y);

        ctx.shadowBlur = 0;
        ctx.globalAlpha = 1;
      });


      const scale = easeT;
      logo.style.transform = `translate(-50%, -50%) scale(${scale})`;

    } else if (elapsed < totalDuration) {
      logo.style.transform = 'translate(-50%, -50%) scale(1)';

    } else {
      window.location.href = 'home_url'; // poyo replace with home
      return;
    }

    requestAnimationFrame(animate);
  }

  initWords();
  requestAnimationFrame(animate);
</script>

</body>
</html>
