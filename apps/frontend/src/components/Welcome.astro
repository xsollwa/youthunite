---
import { Button } from '$lib/components/ui/button';
---

<style>
	@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@700&display=swap');

	@keyframes float {
		0% {
			transform: translateY(0px) rotate(0deg);
		}
		100% {
			transform: translateY(-100px) rotate(360deg);
		}
	}

	@keyframes pulse {
		0%, 100% {
			transform: scale(1);
		}
		50% {
			transform: scale(1.05);
		}
	}

	@keyframes fadeInUp {
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	.hero::before {
		content: "";
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="20" cy="20" r="2" fill="rgba(255,255,255,0.1)"/><circle cx="80" cy="40" r="3" fill="rgba(255,107,53,0.1)"/><circle cx="40" cy="80" r="2" fill="rgba(255,255,255,0.1)"/><circle cx="70" cy="70" r="1" fill="rgba(255,107,53,0.1)"/></svg>');
		animation: float 20s infinite linear;
	}

	.intro-overlay.hidden {
		opacity: 0;
		pointer-events: none;
	}

	.fade-in {
		opacity: 0;
		transform: translateY(30px);
		animation: fadeInUp 0.8s ease forwards;
	}

	.fade-in:nth-child(1) {
		animation-delay: 0.1s;
	}
	.fade-in:nth-child(2) {
		animation-delay: 0.2s;
	}
	.fade-in:nth-child(3) {
		animation-delay: 0.3s;
	}
</style>

<div id="introOverlay" class="fixed top-0 left-0 w-screen h-screen bg-white z-[9999] flex items-center justify-center transition-opacity duration-500 ease-out">
	<canvas id="introCanvas" class="block bg-transparent absolute top-0 left-0 w-screen h-screen"></canvas>
	<img id="introLogo" class="absolute top-1/2 left-1/2 origin-center opacity-100 select-none pointer-events-none w-[280px] h-auto translate-x-[-50%] translate-y-[-50%] scale-0 transition-none" src="/logo.png" alt="YouthUnite" />
</div>

<section class="hero min-h-screen flex items-center relative overflow-hidden" id="home" style="background: linear-gradient(135deg, var(--blue-sky) 0%, var(--blue-light) 100%);">
<br>
	<div class="max-w-6xl mx-auto px-8 grid grid-cols-1 md:grid-cols-2 gap-16 md:gap-16 items-center relative z-20 text-center md:text-left">
		<div>
			<h1 class="text-4xl md:text-6xl font-extrabold mb-6 text-white leading-tight">
				Empowering <span class="drop-shadow-md" style="color: var(--orange-primary);">Youth</span> to Lead Change
			</h1>
			<p class="text-xl mb-8 text-white/90 font-normal">
				Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
				eiusmod tempor incididunt ut labore et dolore magna aliqua.
			</p>
			<div class="flex gap-4 flex-wrap justify-center md:justify-start">
				<a href="/login"><Button size="lg">Join Us</Button></a>
				<a href="#mission"><Button size="lg" variant="secondary">Learn More</Button></a>
			</div>
		</div>
		<div class="flex justify-center items-center relative">
			<div class="w-80 h-80 md:w-96 md:h-96 bg-white/10 rounded-full flex items-center justify-center relative backdrop-blur border-2 border-white/20 overflow-hidden">
				<img src="/teens.png" class="w-full h-full object-cover rounded-full animate-pulse" style="animation: pulse 2s infinite;" />
			</div>
		</div>
	</div>
</section>

<section class="py-24" id="mission" style="background: var(--light-grey);">
	<div class="max-w-6xl mx-auto px-8 text-center">
		<h2 class="text-4xl font-bold mb-4" style="color: var(--blue-dark);">Our Mission</h2>
		<p class="text-xl mb-16 max-w-2xl mx-auto" style="color: var(--dark-grey);">
			Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
			eiusmod tempor incididunt ut labore et dolore magna aliqua.
		</p>

		<div class="grid grid-cols-1 md:grid-cols-3 gap-8 mt-12">
      <div class="fade-in bg-white p-10 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 hover:-translate-y-3">
				<div class="text-5xl mb-4">ü§ù</div>
				<h3 class="text-2xl font-semibold mb-4" style="color: var(--blue-dark);">Connect</h3>
				<p style="color: var(--dark-grey);">
					Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
					do eiusmod tempor incididunt ut labore et dolore magna
					aliqua.
				</p>
			</div>
			<div class="fade-in bg-white p-10 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 hover:-translate-y-3">
				<div class="text-5xl mb-4">üìö</div>
				<h3 class="text-2xl font-semibold mb-4" style="color: var(--blue-dark);">Learn</h3>
				<p style="color: var(--dark-grey);">
					Ut enim ad minim veniam, quis nostrud exercitation ullamco
					laboris nisi ut aliquip ex ea commodo consequat.
				</p>
			</div>
			<div class="fade-in bg-white p-10 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 hover:-translate-y-3">
				<div class="text-5xl mb-4">‚ö°</div>
				<h3 class="text-2xl font-semibold mb-4" style="color: var(--blue-dark);">Act</h3>
				<p style="color: var(--dark-grey);">
					Duis aute irure dolor in reprehenderit in voluptate velit
					esse cillum dolore eu fugiat nulla pariatur.
				</p>
			</div>
		</div>
	</div>
</section>

<section class="py-24 text-white text-center" style="background: linear-gradient(135deg, var(--blue-dark), var(--blue-light));">
	<div class="max-w-4xl mx-auto px-8">
		<h2 class="text-4xl font-bold mb-4">Ready to Make a Difference?</h2>
		<p class="text-xl mb-8 opacity-90">
			Excepteur sint occaecat cupidatat non proident, sunt in culpa qui
			officia deserunt mollit anim id est laborum.
		</p>
    <a href="/register"><Button size="lg" class="w-full max-w-96 h-14 text-lg font-bold sm:w-96">Join us</Button></a>
	</div>
</section>

<script>
  // TODO: type all this
	document.addEventListener('DOMContentLoaded', function() {
		const introOverlay = document.getElementById('introOverlay');
		const hasSeenIntro = sessionStorage.getItem('youthunite_intro_shown');
    // if (!introOverlay || !hasSeenIntro) {
    //   throw new Error('Elements no showy')
    // }
		
		if (hasSeenIntro) {
			introOverlay.style.display = 'none';
		} else {
			initIntroAnimation();
		}
	});

	function initIntroAnimation() {
		const canvas = document.getElementById('introCanvas') as HTMLCanvasElement | null;
    if (!canvas) {
      throw new Error('Canvas no showy')
    }

		const ctx = canvas.getContext('2d');
		const logo = document.getElementById('introLogo');
		const introOverlay = document.getElementById('introOverlay');

		const KEYWORDS = [
			'CONNECT', 'EMPOWER', 'MOBILIZE', 'YOUTH', 'ORGANIZE',
			'EVENTS', 'VOLUNTEERING', 'CREATION', 'COURSES',
			'STORYTELLING', 'STUDENT', 'ORGANIZERS', 'PLATFORM',
			'NONPROFIT', 'PROJECTS', 'LEADERS', 'LEARNING',
			'SIGN UP', 'COMMUNITY', 'TOOLS', 'ENGAGE',
			'SUPPORT', 'COLLABORATE', 'IMPACT', 'ACTION',
			'EDUCATION', 'NETWORK', 'GROW', 'SKILLS', 'TEAMWORK'
		];

		let words: Word[] = [];
		let startTime: number | null = null;
		const spreadDuration = 1000;
		const holdDuration = 1000;    
		const totalDuration = spreadDuration + holdDuration;

		const colors = ['#ff6600', '#002147', '#3399ff'];
    
		function resize() {
			canvas!.width = window.innerWidth;
			canvas!.height = window.innerHeight;
		}
		window.addEventListener('resize', resize);
		resize();

		function initWords() {
			words = KEYWORDS.map(word => {
				return {
					text: word,
					x: canvas!.width / 2,
					y: canvas!.height / 2,
					dx: (Math.random() - 0.5) * 5,
					dy: (Math.random() - 0.5) * 5,
					opacity: 1,
					size: 42 + Math.random() * 14,
					color: colors[Math.floor(Math.random() * colors.length)],
				};
			});
		}

		function easeOut(t: number) {
			return 1 - Math.pow(1 - t, 3);
		}

		function animate(timestamp: number) {
      if (!ctx || !logo || !introOverlay) {
        throw new Error('random if check here which will probably never throw (foreshadowing)')
      }
			if (!startTime) startTime = timestamp;
			const elapsed = timestamp - startTime;

			ctx.clearRect(0, 0, canvas!.width, canvas!.height);

			ctx.fillStyle = '#fff';
			ctx.fillRect(0, 0, canvas!.width, canvas!.height);

			if (elapsed < spreadDuration) {
				const t = elapsed / spreadDuration;
				const easeT = easeOut(t);

				words.forEach(word => {
					const moveX = word.dx * easeT * 350; 
					const moveY = word.dy * easeT * 350;
					const x = word.x + moveX;
					const y = word.y + moveY;

					ctx.font = `700 ${word.size}px Oswald, sans-serif`;
					ctx.textAlign = 'center';
					ctx.textBaseline = 'middle';

					ctx.fillStyle = word.color;
					ctx.shadowColor = 'rgba(0,0,0,0.3)'; 
					ctx.shadowBlur = 4;
					ctx.globalAlpha = 1 - easeT;

					ctx.fillText(word.text, x, y);

					ctx.shadowBlur = 0;
					ctx.globalAlpha = 1;
				});

				const scale = easeT;
				logo.style.transform = `translate(-50%, -50%) scale(${scale})`;

			} else if (elapsed < totalDuration) {
				logo.style.transform = 'translate(-50%, -50%) scale(1)';

			} else {
				introOverlay.classList.add('hidden');
				sessionStorage.setItem('youthunite_intro_shown', 'true');
				
				setTimeout(() => {
					introOverlay.style.display = 'none';
				}, 500);
				return;
			}

			requestAnimationFrame(animate);
		}

		initWords();
		requestAnimationFrame(animate);
	}

  interface Word {
    text: string;
    x: number;
    y: number;
    dx: number;
    dy: number;
    opacity: number;
    size: number;
    color: string;
  }
</script>
